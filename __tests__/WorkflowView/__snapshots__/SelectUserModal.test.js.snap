// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectUserModal component SelectUserModal snapshot test should render correctly 1`] = `
<View
  style={
    Object {
      "elevation": 3,
      "flexDirection": "row",
      "shadowColor": "rgba(78, 93, 120, 0.56)",
      "shadowOffset": Object {
        "height": 4,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 16,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#091540",
        "borderRadius": 4,
        "flexDirection": "column",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "paddingLeft": 16,
          "paddingRight": 8,
          "paddingTop": 8,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "column",
            "marginTop": 8,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#04142F",
                "fontFamily": "Roboto-Medium",
                "fontSize": 18,
                "lineHeight": 26,
              },
              Object {
                "color": "white",
              },
            ]
          }
        >
          Choose a user
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#04142F",
                "fontFamily": "Roboto-Regular",
                "fontSize": 14,
                "letterSpacing": 0.32,
                "lineHeight": 22,
              },
              Object {
                "color": "#8A94A6",
              },
            ]
          }
        >
          Select who will review the step
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "flex-end",
            "marginLeft": "auto",
            "width": 40,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            accessible={true}
            style={
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "opacity": 1,
                "width": 24,
              }
            }
          >
            <View>
              <Text
                style={
                  Object {
                    "color": "#8A94A6",
                    "fontFamily": "alldone",
                    "fontSize": 24,
                    "opacity": 1,
                  }
                }
              >
                
              </Text>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
    <View
      style={
        Object {
          "flexDirection": "column",
          "marginTop": 20,
          "paddingBottom": 8,
          "paddingHorizontal": 8,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "opacity": 1,
            "padding": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <Image
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Object {
                "borderRadius": 100,
                "height": 32,
                "marginRight": 8,
                "width": 32,
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 16,
                  "letterSpacing": 0.16,
                  "lineHeight": 24,
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            a
          </Text>
        </View>
        <View
          style={
            Object {
              "marginLeft": "auto",
              "opacity": 0,
            }
          }
        >
          <View>
            <Text
              style={
                Object {
                  "color": "white",
                  "fontFamily": "alldone",
                  "fontSize": 24,
                  "opacity": 1,
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
