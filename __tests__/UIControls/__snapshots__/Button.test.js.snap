// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component Button empty snapshot test Should render correctly 1`] = `
<View
  accessible={true}
  focusable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0D55CF",
      "borderRadius": 4,
      "flexDirection": "row",
      "flexWrap": "nowrap",
      "height": 40,
      "justifyContent": "center",
      "maxHeight": 40,
      "minHeight": 40,
      "opacity": 1,
      "paddingLeft": 8,
      "paddingRight": 8,
      "paddingVertical": 8,
    }
  }
/>
`;

exports[`Button component Button primary with title and icon snapshot test Should render correctly 1`] = `
<View
  accessible={true}
  focusable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "#0D55CF",
      "borderRadius": 4,
      "flexDirection": "row",
      "flexWrap": "nowrap",
      "height": 40,
      "justifyContent": "center",
      "maxHeight": 40,
      "minHeight": 40,
      "opacity": 1,
      "paddingLeft": 12,
      "paddingRight": 16,
      "paddingVertical": 8,
    }
  }
>
  <View>
    <Text
      style={
        Object {
          "color": "#ffffff",
          "fontFamily": "alldone",
          "fontSize": 24,
          "opacity": 1,
        }
      }
    >
      
    </Text>
  </View>
  <Text
    numberOfLines={1}
    style={
      Array [
        Array [
          Object {
            "alignSelf": "center",
            "color": "#FFFFFF",
            "flexWrap": "nowrap",
            "fontFamily": "Roboto-Medium",
            "fontSize": 14,
            "letterSpacing": 0.8,
            "lineHeight": 16,
            "margin": 0,
            "paddingHorizontal": 0,
            "paddingVertical": 0,
          },
          Object {
            "color": "#ffffff",
          },
          Object {},
        ],
        Object {
          "marginLeft": 12,
        },
      ]
    }
  >
    Upload
  </Text>
</View>
`;

exports[`Button component Button text with only icon and disabled snapshot test Should render a blue text button correctly 1`] = `
<View
  accessible={true}
  focusable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "transparent",
      "borderRadius": 4,
      "flexDirection": "row",
      "flexWrap": "nowrap",
      "height": 40,
      "justifyContent": "center",
      "maxHeight": 40,
      "minHeight": 40,
      "opacity": 1,
      "paddingLeft": 8,
      "paddingRight": 8,
      "paddingVertical": 8,
    }
  }
>
  <View>
    <Text
      style={
        Object {
          "color": "#0D55CF",
          "fontFamily": "alldone",
          "fontSize": 24,
          "opacity": 1,
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`Button component Button text with only icon and disabled snapshot test Should render a red text button correctly 1`] = `
<View
  accessible={true}
  focusable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "transparent",
      "borderRadius": 4,
      "flexDirection": "row",
      "flexWrap": "nowrap",
      "height": 40,
      "justifyContent": "center",
      "maxHeight": 40,
      "minHeight": 40,
      "opacity": 1,
      "paddingLeft": 8,
      "paddingRight": 8,
      "paddingVertical": 8,
    }
  }
>
  <View>
    <Text
      style={
        Object {
          "color": "#E00000",
          "fontFamily": "alldone",
          "fontSize": 24,
          "opacity": 1,
        }
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`Button component Function buildFinalStyle snapshot test Should render correctly after function execution 1`] = `
<View
  accessible={true}
  focusable={false}
  isTVSelectable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "alignItems": "center",
      "alignSelf": "flex-start",
      "backgroundColor": "transparent",
      "borderColor": "#C6CDD2",
      "borderRadius": 4,
      "borderStyle": "solid",
      "borderWidth": 0,
      "flexDirection": "row",
      "flexWrap": "nowrap",
      "height": 40,
      "justifyContent": "center",
      "maxHeight": 40,
      "minHeight": 40,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 8,
    }
  }
>
  <Text
    numberOfLines={1}
    style={
      Array [
        Object {
          "alignSelf": "center",
          "color": "#FFFFFF",
          "flexWrap": "nowrap",
          "fontFamily": "Roboto-Medium",
          "fontSize": 14,
          "letterSpacing": 0.8,
          "lineHeight": 16,
          "margin": 0,
          "paddingHorizontal": 8,
          "paddingVertical": 0,
        },
        Object {
          "color": "#8A94A6",
        },
        undefined,
      ]
    }
  >
    Next
  </Text>
</View>
`;
